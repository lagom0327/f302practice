{"version":3,"sources":["components/App/App.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","console","log","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onChange","target","onFocus","rows","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","theme","colors","secondary","300","400","500","document","getElementById"],"mappings":"0zDAGA,IAEMA,EAAOC,IAAOC,IAAV,KAIJC,EAAQF,IAAOG,GAAV,KAGLC,EAAcJ,IAAOK,KAAV,KAGXC,EAAkBN,IAAOO,SAAV,KAIfC,EAAeR,IAAOS,OAAV,KAGZC,EAAcV,IAAOC,IAAV,KAIXU,EAAmBX,IAAOC,IAAV,KAQhBW,EAAcZ,IAAOC,IAAV,KAOXY,EAAgBb,IAAOC,IAAV,KAIba,EAAcd,IAAOC,IAAV,KACXc,EAAcf,IAAOC,IAAV,KAIXe,EAAehB,IAAOC,IAAV,KAKZgB,EAAUjB,IAAOC,IAAV,KAYb,SAASiB,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/B,OACE,eAACV,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBM,IAChB,cAACL,EAAD,UAAcM,OAEhB,cAACL,EAAD,UAAcM,OAwGLC,MA7Ff,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACNC,EADM,KACIC,EADJ,OAEiCF,mBAAS,MAF1C,mBAENG,EAFM,KAEWC,EAFX,OAGaJ,mBAAS,IAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAImCN,qBAJnC,mBAINO,EAJM,KAIYC,EAJZ,OAK2CR,oBAAS,GALpD,mBAKNS,EALM,KAKgBC,EALhB,KAMPC,EAAgB,WACpB,OAAOC,MAxFT,2EAyFKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLd,EAAYc,MAEbC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAIG,SAChBjB,EAAmBc,EAAIG,aAyC7B,OAHAC,qBAAU,WACRX,MACC,IAED,eAACnC,EAAD,WACGiC,GAAwB,cAACf,EAAD,sBACzB,cAACf,EAAD,iCACA,eAACE,EAAD,CAAa0C,SApCQ,SAACC,GACxBA,EAAEC,iBACEhB,IACJC,GAAwB,GACxBE,MAAM,8CAA+C,CACnDc,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,KACVH,KAAMvB,MAGPQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLN,GAAwB,GACR,IAAZM,EAAKgB,IAIT1B,EAAS,IACTK,KAJEH,EAAoBQ,EAAKK,YAM5BJ,OAAM,SAACC,GACNR,GAAwB,GACxBF,EAAoBU,EAAIG,cAU1B,UACE,cAACtC,EAAD,CACEsB,MAAOA,EACP4B,SA7CqB,SAACT,GAC5BlB,EAASkB,EAAEU,OAAO7B,QA6CZ8B,QA3CoB,SAACX,GAC3BhB,EAAoB,OA2Cd4B,KAAM,KAER,cAACnD,EAAD,uCACCsB,GACC,eAACd,EAAD,oCAAqCc,QAGxCJ,GACC,eAACV,EAAD,oCACyBU,EAAgBkC,cAG1CpC,GAAgC,IAApBA,EAASqC,QAAgB,6CACtC,cAACnD,EAAD,UACGc,GACCA,EAASsC,KAAI,SAAClB,GAAD,OACX,cAAC1B,EAAD,CAEEC,OAAQyB,EAAQU,SAChBlC,KAAM,IAAI2C,KAAKnB,EAAQoB,WAAWC,iBAHpC,SAKGrB,EAAQO,MAJJP,EAAQsB,aCtJ3BC,IAASC,OAAS,cAAC,IAAD,CAAeC,MAVnB,CACZC,OAAQ,CACNC,UAAW,CACTC,IAAK,UACLC,IAAK,UACLC,IAAK,aAKO,SACd,cAAC,EAAD,MACgBC,SAASC,eAAgB,W","file":"static/js/main.ca20ba44.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\nconst Page = styled.div`\n  width: 360px;\n  margin: 0 auto;\n`;\nconst Title = styled.h1`\n  color: #333;\n`;\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\n\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n  & + & {\n    margin-top: 8px;\n  }\n`;\nconst MessageHead = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 4px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78, 55, 0.3);\n  font-size: 14px;\n`;\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n  margin-top: 16px;\n  font-size: 16px;\n`;\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const [postMessageError, setPostMessageError] = useState();\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n  const fetchMessages = () => {\n    return fetch(API_ENDPOINT)\n      .then((res) => res.json())\n      .then((data) => {\n        setMessages(data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        setMessageApiError(err.message);\n      });\n  };\n  const handleTextAreaChange = (e) => {\n    setValue(e.target.value);\n  };\n  const handleTextareaFocus = (e) => {\n    setPostMessageError(null);\n  };\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (isLoadingPostMessage) return;\n    setIsLoadingPostMessage(true);\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"hi\",\n        body: value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setIsLoadingPostMessage(false);\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        setValue(\"\");\n        fetchMessages();\n      })\n      .catch((err) => {\n        setIsLoadingPostMessage(false);\n        setPostMessageError(err.message);\n      });\n  };\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          value={value}\n          onChange={handleTextAreaChange}\n          onFocus={handleTextareaFocus}\n          rows={10}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && (\n          <ErrorMessage>Something went wrong. {postMessageError}</ErrorMessage>\n        )}\n      </MessageForm>\n      {messageApiError && (\n        <ErrorMessage>\n          Something went wrong. {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No message</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    secondary: {\n      300: \"#3333dd\",\n      400: \"#d84646\",\n      500: \"#b92121\"\n    }\n  }\n};\n\nReactDOM.render ( <ThemeProvider theme={theme}>\n    <App/>\n  </ThemeProvider>, document.getElementById( \"root\" ) );\n"],"sourceRoot":""}