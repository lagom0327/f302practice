{"version":3,"sources":["utils.js","WebAPI.js","pages/HomePage/HomePage.js","contexts.js","pages/LoginPage/LoginPage.js","components/Loading/Loading.js","pages/PostPage/PostPage.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","Root","styled","div","PostContainer","PostTitle","Link","PostDate","Post","post","to","id","title","Date","createdAt","toLocaleDateString","HomePage","useState","posts","setPosts","useEffect","map","AuthContext","createContext","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","setUser","useContext","history","useHistory","onSubmit","e","preventDefault","method","body","JSON","stringify","login","console","log","ok","message","response","data","push","value","onChange","target","type","Loading","PostPageContainer","PostHeader","h1","PostContent","ErrorMessage","PostPage","useParams","postApiError","setPostApiError","setPost","getPostById","catch","err","toString","toLocaleString","HeaderContainer","Brand","Navbarlist","Nav","props","$active","LeftContainer","Header","user","location","useLocation","useRouteMatch","isExact","pathname","onClick","App","Provider","exact","path","ReactDOM","render","theme","colors","secondary","300","400","500","document","getElementById"],"mappings":"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","file":"static/js/main.311d42a9.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { getAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getPostById = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\r\n};\r\n\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { getPosts } from \"../../WebAPI\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  paddiing: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    getPosts().then((res) => setPosts(res));\n  }, []);\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n    </Root>\n  );\n}\n","import { createContext } from \"react\";\r\nexport const AuthContext = createContext(null);\r\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const { setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    login(username, password).then((res) => {\n      console.log(res);\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      setAuthToken(res.token);\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <input\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <div>{errorMessage}</div>}\n    </form>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Loading = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getPostById } from \"../../WebAPI\";\nimport Loading from \"../../components/Loading\";\n\nconst PostPageContainer = styled.div`\n  width: 80%;\n  max-width: 900px;\n  min-height: 80vh;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n  margin: 1rem auto;\n  box-sizing: border-box;\n  position: relative;\n  border-radius: 5px;\n  // padding: 1.5rem;\n`;\n\nconst PostHeader = styled.div`\n  // // display: flex;\n  // justify-content: space-between;\n  // align-items: center;\n  border-bottom: 1px solid #ccc;\n  padding: 1rem 0;\n`;\n\nconst PostTitle = styled.h1`\n  overflow-wrap: break-word;\n`;\n\nconst PostDate = styled.div`\n  color: #333;\n`;\n\nconst PostContent = styled.div`\n  padding: 1rem 0;\n  margin: 0 auto;\n  overflow-wrap: break-word;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\n\nexport default function PostPage() {\n  let { id } = useParams();\n  const [postApiError, setPostApiError] = useState(false);\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    setPostApiError(false);\n    setPost(null);\n    getPostById(id)\n      .then((res) => {\n        if (!res[0]) {\n          return setPostApiError(\"沒有這個 id\");\n        }\n        setPost(res[0]);\n      })\n      .catch((err) => {\n        setPostApiError(err.message);\n      });\n  }, [id]);\n\n  return (\n    <PostPageContainer>\n      {!post && !postApiError && <Loading>Loading ...</Loading>}\n      {!post && postApiError && (\n        <ErrorMessage>\n          Something went wrong. {postApiError.toString()}\n        </ErrorMessage>\n      )}\n      {post && (\n        <>\n          <PostHeader>\n            <PostTitle>{post.title}</PostTitle>\n            <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n          </PostHeader>\n          <PostContent>{post.body}</PostContent>\n        </>\n      )}\n    </PostPageContainer>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Link, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n  box-sizing: border-box;\n`;\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\nconst Navbarlist = styled.div`\n  display: flex;\n  aligin-items: center;\n  height: 100%;\n  // height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  // border: 1px solid black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0, 0, 0, 0.2);\n  `}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  ${Navbarlist} {\n    margin-left: 64px;\n  }\n`;\nexport default function Header() {\n  const { user, setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const location = useLocation();\n  // const isHomePage = useRouteMatch(\"/\").isExact;\n  // 有更好的方式拿到 pathname 而不是用uselocation => useRouteMatch\n\n  console.log(\"/\", useRouteMatch(\"/\"));\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") history.push(\"/\");\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的第一個部落格</Brand>\n        <Navbarlist>\n          <Nav to=\"/\" $active={useRouteMatch(\"/\").isExact}>\n            首頁\n          </Nav>\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布文章\n            </Nav>\n          )}\n        </Navbarlist>\n      </LeftContainer>\n      <Navbarlist>\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n            登入\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </Navbarlist>\n    </HeaderContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport HomePage from \"../../pages/HomePage\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport PostPage from \"../../pages/PostPage\";\nimport Header from \"../Header\";\nimport { AuthContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const token = getAuthToken();\n    if (token) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route exact path=\"/posts/:id\">\n              <PostPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"styled-components\";\nimport \"normalize.css\"; // Note this\n\nconst theme = {\n  colors: {\n    secondary: {\n      300: \"#3333dd\",\n      400: \"#d84646\",\n      500: \"#b92121\",\n    },\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}